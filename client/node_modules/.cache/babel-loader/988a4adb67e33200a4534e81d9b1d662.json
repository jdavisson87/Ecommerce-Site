{"ast":null,"code":"var _jsxFileName = \"/Users/jeffreydavisson/Documents/projects/react-course/ecommerce-site/client/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonContainer } from './sign-in.styles';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: email,\n    label: \"email\",\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    label: \"password\",\n    handleChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(ButtonContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    value: \"Submit Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, ' ', \"Sign In\", ' '), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, ' ', \"Sign in with Google\", ' '))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/jeffreydavisson/Documents/projects/react-course/ecommerce-site/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonContainer","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAKA,SACEC,eADF,EAEEC,WAFF,EAGEC,eAHF,QAIO,kBAJP;;AAMA,MAAMC,MAAM,GAAG,CAAC;AAAEJ,EAAAA,gBAAF;AAAoBD,EAAAA;AAApB,CAAD,KAA6C;AAC1D,QAAM,CAACM,eAAD,EAAkBC,cAAlB,IAAoCX,QAAQ,CAAC;AACjDY,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,QAAQ,EAAE;AAFuC,GAAD,CAAlD;AAKA,QAAM;AAAED,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBH,eAA5B;;AAEA,QAAMI,YAAY,GAAG,MAAMC,KAAN,IAAe;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEAX,IAAAA,gBAAgB,CAACO,KAAD,EAAQC,QAAR,CAAhB;AACD,GAJD;;AAMA,QAAMI,YAAY,GAAGF,KAAK,IAAI;AAC5B,UAAM;AAAEG,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBJ,KAAK,CAACK,MAA9B;AAEAT,IAAAA,cAAc,CAAC,EAAE,GAAGD,eAAL;AAAsB,OAACS,IAAD,GAAQD;AAA9B,KAAD,CAAd;AACD,GAJD;;AAMA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAIE;AAAM,IAAA,QAAQ,EAAEJ,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,KAHT;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,YAAY,EAAEK,YALhB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEJ,QAHT;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,YAAY,EAAEI,YALhB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,KAAK,EAAC,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,aAEU,GAFV,CADF,EAKE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEb,iBAFX;AAGE,IAAA,cAAc,MAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,GALH,yBAMsB,GANtB,CALF,CAjBF,CAJF,CADF;AAuCD,CA3DD;;AA6DA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADK;AAEtCC,EAAAA,gBAAgB,EAAE,CAACO,KAAD,EAAQC,QAAR,KAChBS,QAAQ,CAACjB,gBAAgB,CAAC;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH4B,CAAL,CAAnC;;AAMA,eAAeZ,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from '../../redux/user/user.actions';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonContainer\n} from './sign-in.styles';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    setCredentials({ ...userCredentials, [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          value={email}\n          label=\"email\"\n          handleChange={handleChange}\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          label=\"password\"\n          handleChange={handleChange}\n          required\n        />\n        <ButtonContainer>\n          <CustomButton type=\"submit\" value=\"Submit Form\">\n            {' '}\n            Sign In{' '}\n          </CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            {' '}\n            Sign in with Google{' '}\n          </CustomButton>\n        </ButtonContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}